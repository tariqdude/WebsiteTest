---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { ExternalLink, GitBranch, Filter } from 'lucide-react';

const allProjects = await getCollection('projects');
const projects = allProjects.sort((a, b) => a.data.order - b.data.order);

// Get all unique technologies
const allTechnologies = [
  ...new Set(projects.flatMap((project) => project.data.tech)),
].sort();
---

<Layout
  title='Projects - Astro Showcase'
  description='Explore our collection of projects showcasing modern web development with various frameworks and technologies.'
>
  <!-- Hero Section -->
  <section
    class='bg-gradient-to-br from-primary-50 to-purple-50 py-20 dark:from-gray-900 dark:to-purple-900/20'
  >
    <div class='container mx-auto px-4 sm:px-6 lg:px-8'>
      <div class='text-center'>
        <h1
          class='mb-6 text-4xl font-bold text-gray-900 dark:text-white md:text-6xl'
        >
          Our Projects
        </h1>
        <p
          class='mx-auto mb-8 max-w-3xl text-xl text-gray-600 dark:text-gray-300 md:text-2xl'
        >
          A collection of projects demonstrating real-world applications of
          modern web technologies
        </p>
        <div
          class='flex items-center justify-center space-x-2 text-sm text-gray-600 dark:text-gray-400'
        >
          <span>{projects.length} Projects</span>
          <span>â€¢</span>
          <span>{allTechnologies.length} Technologies</span>
        </div>
      </div>
    </div>
  </section>

  <!-- Filter Bar -->
  <section
    class='border-b border-gray-200 bg-white py-8 dark:border-gray-700 dark:bg-gray-900'
  >
    <div class='container mx-auto px-4 sm:px-6 lg:px-8'>
      <div class='flex flex-col lg:flex-row lg:items-center lg:justify-between'>
        <div class='mb-4 flex items-center space-x-2 lg:mb-0'>
          <Filter className='h-5 w-5 text-gray-500 dark:text-gray-400' />
          <span class='text-sm font-medium text-gray-700 dark:text-gray-300'
            >Filter by technology:</span
          >
        </div>
        <div class='flex flex-wrap gap-2'>
          <button
            id='filter-all'
            class='rounded-full bg-primary-100 px-3 py-1 text-sm font-medium text-primary-700 dark:bg-primary-900 dark:text-primary-300'
            data-filter='all'
          >
            All
          </button>
          {
            allTechnologies.map((tech) => (
              <button
                class='rounded-full bg-gray-100 px-3 py-1 text-sm text-gray-700 transition-colors hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700'
                data-filter={tech.toLowerCase()}
              >
                {tech}
              </button>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <!-- Projects Grid -->
  <section class='bg-gray-50 py-20 dark:bg-gray-800'>
    <div class='container mx-auto px-4 sm:px-6 lg:px-8'>
      <div
        id='projects-grid'
        class='grid grid-cols-1 gap-8 md:grid-cols-2 lg:grid-cols-3'
      >
        {
          projects.map((project) => (
            <article
              class='project-card card group transition-all duration-300 hover:shadow-xl'
              data-technologies={project.data.tech
                .map((t) => t.toLowerCase())
                .join(' ')}
            >
              {/* Project Image */}
              <div class='mb-6 aspect-video overflow-hidden rounded-lg bg-gradient-to-br from-primary-100 to-purple-100 dark:from-primary-900 dark:to-purple-900'>
                <img
                  src={project.data.image}
                  alt={project.data.title}
                  class='h-full w-full object-cover transition-transform duration-300 group-hover:scale-105'
                  loading='lazy'
                />
              </div>

              {/* Project Content */}
              <div class='flex flex-1 flex-col'>
                <h3 class='mb-3 text-xl font-semibold text-gray-900 transition-colors group-hover:text-primary-600 dark:text-white dark:group-hover:text-primary-400'>
                  <a href={`/projects/${project.slug}`}>{project.data.title}</a>
                </h3>

                <p class='mb-4 flex-1 text-gray-600 dark:text-gray-300'>
                  {project.data.description}
                </p>

                {/* Technologies */}
                <div class='mb-6 flex flex-wrap gap-2'>
                  {project.data.tech.map((tech) => (
                    <span class='rounded bg-gray-100 px-2 py-1 text-xs font-medium text-gray-700 dark:bg-gray-700 dark:text-gray-300'>
                      {tech}
                    </span>
                  ))}
                </div>

                {/* Action Links */}
                <div class='flex items-center space-x-4 border-t border-gray-200 pt-4 dark:border-gray-700'>
                  <a
                    href={`/projects/${project.slug}`}
                    class='text-sm font-medium text-primary-600 transition-colors hover:text-primary-700 dark:text-primary-400 dark:hover:text-primary-300'
                  >
                    View Details
                  </a>
                  {project.data.demo && (
                    <a
                      href={project.data.demo}
                      target='_blank'
                      rel='noopener noreferrer'
                      class='inline-flex items-center space-x-1 text-sm text-gray-600 transition-colors hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'
                    >
                      <ExternalLink className='w-4 h-4' />
                      <span>Live Demo</span>
                    </a>
                  )}
                  {project.data.github && (
                    <a
                      href={project.data.github}
                      target='_blank'
                      rel='noopener noreferrer'
                      class='inline-flex items-center space-x-1 text-sm text-gray-600 transition-colors hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300'
                    >
                      <GitBranch className='w-4 h-4' />
                      <span>Code</span>
                    </a>
                  )}
                </div>
              </div>
            </article>
          ))
        }
      </div>

      <!-- No Results Message -->
      <div id='no-results' class='hidden py-16 text-center'>
        <div class='text-gray-500 dark:text-gray-400'>
          <Filter className='mx-auto mb-4 h-16 w-16 opacity-50' />
          <h3 class='mb-2 text-xl font-semibold'>No projects found</h3>
          <p>Try adjusting your filter to see more projects.</p>
        </div>
      </div>
    </div>
  </section>

  <!-- Call to Action -->
  <section class='bg-white py-20 dark:bg-gray-900'>
    <div class='container mx-auto px-4 text-center sm:px-6 lg:px-8'>
      <h2
        class='mb-6 text-3xl font-bold text-gray-900 dark:text-white md:text-5xl'
      >
        Have a Project in Mind?
      </h2>
      <p
        class='mx-auto mb-8 max-w-2xl text-xl text-gray-600 dark:text-gray-300'
      >
        Let's discuss how we can bring your ideas to life with modern web
        technologies
      </p>
      <div class='flex flex-col justify-center gap-4 sm:flex-row'>
        <a href='/contact' class='btn-primary'> Start a Conversation </a>
        <a href='/blog' class='btn-secondary'> Read Our Blog </a>
      </div>
    </div>
  </section>
</Layout>

<script>
  function initProjectFilter() {
    const filterButtons = document.querySelectorAll('[data-filter]');
    const projectCards = document.querySelectorAll('.project-card');
    const noResults = document.getElementById('no-results');

    if (!filterButtons.length || !projectCards.length) return;

    filterButtons.forEach((button) => {
      button.addEventListener('click', () => {
        const filter = button.getAttribute('data-filter');

        // Update active button
        filterButtons.forEach((btn) => {
          btn.classList.remove(
            'bg-primary-100',
            'text-primary-700',
            'dark:bg-primary-900',
            'dark:text-primary-300'
          );
          btn.classList.add(
            'bg-gray-100',
            'hover:bg-gray-200',
            'text-gray-700',
            'dark:bg-gray-800',
            'dark:hover:bg-gray-700',
            'dark:text-gray-300'
          );
        });

        button.classList.remove(
          'bg-gray-100',
          'hover:bg-gray-200',
          'text-gray-700',
          'dark:bg-gray-800',
          'dark:hover:bg-gray-700',
          'dark:text-gray-300'
        );
        button.classList.add(
          'bg-primary-100',
          'text-primary-700',
          'dark:bg-primary-900',
          'dark:text-primary-300'
        );

        // Filter projects
        let visibleCount = 0;
        projectCards.forEach((card) => {
          const technologies = card.getAttribute('data-technologies');
          const isVisible =
            filter === 'all' ||
            (technologies && technologies.includes(filter || ''));

          if (isVisible) {
            (card as HTMLElement).style.display = 'block';
            visibleCount++;
          } else {
            (card as HTMLElement).style.display = 'none';
          }
        });

        // Show/hide no results message
        if (visibleCount === 0) {
          noResults?.classList.remove('hidden');
        } else {
          noResults?.classList.add('hidden');
        }
      });
    });
  }

  // Initialize on page load
  initProjectFilter();

  // Re-initialize after view transitions
  document.addEventListener('astro:after-swap', initProjectFilter);
</script>

<style>
  .project-card {
    opacity: 1;
    transform: translateY(0);
    transition:
      opacity 0.3s ease,
      transform 0.3s ease;
  }

  .project-card[style*='display: none'] {
    opacity: 0;
    transform: translateY(10px);
  }
</style>

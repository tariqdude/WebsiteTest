---
import { SITE } from '../config/site';

interface Props {
  title?: string;
  description?: string;
}

const { title: defaultTitle, description: defaultDescription } = SITE;
const { title = defaultTitle, description = defaultDescription } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/logo.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta name="description" content={description} />
    <meta name="keywords" content="Astro, React, Web Development, Business, Portfolio, Contact, Team, Testimonials, PWA, SEO" />
    <meta name="author" content={SITE.author} />
    <meta name="robots" content="index, follow" />
    <link rel="canonical" href={Astro.url.href} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url.href} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={SITE.defaultImage} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url.href} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={SITE.defaultImage} />

    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "WebSite",
        "name": "{SITE.title}",
        "url": "{SITE.site}",
        "description": "{SITE.description}"
      }
    </script>

    <link rel="manifest" href="/WebsiteTest/manifest.json" />
    <link rel="robots" href="/WebsiteTest/robots.txt" />
    <script>
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/WebsiteTest/sw.js')
            .then(registration => {
              console.log('Service Worker registered with scope:', registration.scope);
            })
            .catch(error => {
              console.error('Service Worker registration failed:', error);
            });
        });
      }
    </script>

    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&family=Roboto:wght@400;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <slot />
  </body>
</html>

<style is:global>
  @import '../styles/base.css';
</style>

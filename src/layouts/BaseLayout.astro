---
import { ViewTransitions } from 'astro:transitions';
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
}

const {
  title,
  description = 'Astro Showcase - Demonstrating the power of modern web development',
  image = '/images/og-default.jpg',
  type = 'website'
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const imageURL = new URL(image, Astro.site);
---

<!doctype html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/WebsiteTest/favicon.svg" />
    <link rel="canonical" href={canonicalURL} />
    
    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    
    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={imageURL} />
    <meta property="og:site_name" content="Astro Showcase" />
    
    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={imageURL} />
    
    <!-- Theme -->
    <meta name="theme-color" content="#3b82f6" />
    <meta name="color-scheme" content="light dark" />
    
    <!-- Preload critical assets -->
    <link rel="preload" href="/WebsiteTest/fonts/inter.woff2" as="font" type="font/woff2" crossorigin />
    
    <!-- View Transitions -->
    <ViewTransitions />
    
    <!-- Theme Script (inline to prevent FOUC) -->
    <script is:inline>
      // Theme management
      function getThemePreference() {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
      }
      
      const isDark = getThemePreference() === 'dark';
      document.documentElement.classList[isDark ? 'add' : 'remove']('dark');
      
      if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
          const isDark = document.documentElement.classList.contains('dark');
          localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
      }
    </script>
  </head>
  <body class="antialiased">
    <div class="min-h-screen flex flex-col">
      <slot />
    </div>
  </body>
</html>

---
export interface Props {
  title?: string;
  description?: string;
  canonical?: string;
  image?: string;
  noindex?: boolean;
  type?: 'website' | 'article' | 'product';
}

const {
  title = 'Enterprise Business Template - Professional Website Solution',
  description = 'Modern, responsive, and feature-rich business website template built with Astro, React, and Tailwind CSS. Perfect for Fortune 500 companies and growing businesses.',
  canonical = Astro.url.href,
  image = '/images/og-image.jpg',
  noindex = false,
  type = 'website'
} = Astro.props;

const fullTitle = title.includes('Enterprise Business Template') ? title : `${title} | Enterprise Business Template`;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <!-- Basic Meta Tags -->
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="generator" content={Astro.generator} />
    
    <!-- SEO Meta Tags -->
    <title>{fullTitle}</title>
    <meta name="description" content={description} />
    <link rel="canonical" href={canonical} />
    {noindex && <meta name="robots" content="noindex, nofollow" />}
    
    <!-- Open Graph Meta Tags -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonical} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={new URL(image, Astro.url).href} />
    <meta property="og:site_name" content="Enterprise Business Template" />
    <meta property="og:locale" content="en_US" />
    
    <!-- Twitter Card Meta Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:url" content={canonical} />
    <meta name="twitter:title" content={fullTitle} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(image, Astro.url).href} />
    <meta name="twitter:creator" content="@yourbusiness" />
    
    <!-- Additional Meta Tags -->
    <meta name="author" content="Enterprise Business Template" />
    <meta name="theme-color" content="#3b82f6" />
    <meta name="msapplication-TileColor" content="#3b82f6" />
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <meta name="apple-mobile-web-app-status-bar-style" content="default" />
    <meta name="format-detection" content="telephone=no" />
    
    <!-- Favicon -->
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <link rel="manifest" href="/site.webmanifest" />
    
    <!-- Preconnect to external domains -->
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="preconnect" href="https://images.unsplash.com" />
    
    <!-- DNS Prefetch -->
    <link rel="dns-prefetch" href="//fonts.googleapis.com" />
    <link rel="dns-prefetch" href="//fonts.gstatic.com" />
    <link rel="dns-prefetch" href="//images.unsplash.com" />
    
    
    <!-- Critical CSS -->
    <style>
      /* Critical loading styles */
      .loading-screen {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
        transition: opacity 0.5s ease-out;
      }
      
      .loading-screen.fade-out {
        opacity: 0;
        pointer-events: none;
      }
      
      .loader {
        width: 50px;
        height: 50px;
        border: 3px solid rgba(255, 255, 255, 0.3);
        border-top: 3px solid white;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
      
      /* Prevent flash of unstyled content */
      body {
        margin: 0;
        padding: 0;
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
      }
      
      /* Critical above-the-fold styles */
      .hero-gradient {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
      }
    </style>
    
    <!-- Performance optimizations -->
    <link rel="modulepreload" href="/src/scripts/main.js" />
    
    <!-- Global Styles -->
    <link rel="stylesheet" href="/src/styles/global.css" />
  </head>
  
  <body class="antialiased">
    <!-- Loading Screen -->
    <div id="loading-screen" class="loading-screen">
      <div class="loader"></div>
    </div>
    
    <!-- Skip to content link for accessibility -->
    <a 
      href="#main-content" 
      class="sr-only focus:not-sr-only focus:absolute focus:top-4 focus:left-4 z-50 bg-primary-600 text-white px-4 py-2 rounded-md"
    >
      Skip to main content
    </a>
    
    <!-- Main Content -->
    <div id="app" class="min-h-screen">
      <slot />
    </div>
    
    <!-- Scripts -->
    <script>
      // Remove loading screen when page is loaded
      window.addEventListener('load', () => {
        const loadingScreen = document.getElementById('loading-screen');
        if (loadingScreen) {
          loadingScreen.classList.add('fade-out');
          setTimeout(() => {
            loadingScreen.remove();
          }, 500);
        }
      });
      
      // Dark mode toggle
      const initTheme = () => {
        const theme = localStorage.getItem('theme') || 
          (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
        
        if (theme === 'dark') {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
        
        localStorage.setItem('theme', theme);
      };
      
      // Initialize theme immediately
      initTheme();
      
      // Listen for system theme changes
      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
        if (!localStorage.getItem('theme')) {
          if (e.matches) {
            document.documentElement.classList.add('dark');
          } else {
            document.documentElement.classList.remove('dark');
          }
        }
      });
      
      // Smooth scroll for older browsers
      if (!('scrollBehavior' in document.documentElement.style)) {
        // Fallback for browsers without smooth scroll support
        document.documentElement.style.scrollBehavior = 'auto';
      }
      
      // Performance observer for Core Web Vitals
      if ('PerformanceObserver' in window) {
        const observer = new PerformanceObserver((list) => {
          list.getEntries().forEach((entry) => {
            console.log(`${entry.name}: ${entry.duration || 0}`);
            // Here you can send metrics to your analytics service
          });
        });
        
        observer.observe({ entryTypes: ['measure', 'largest-contentful-paint', 'first-input', 'layout-shift'] });
      }
      
      // Service Worker registration
      if ('serviceWorker' in navigator) {
        window.addEventListener('load', () => {
          navigator.serviceWorker.register('/sw.js')
            .then((registration) => {
              console.log('SW registered: ', registration);
            })
            .catch((registrationError) => {
              console.log('SW registration failed: ', registrationError);
            });
        });
      }
    </script>
    
    <!-- Analytics placeholder -->
    <script type="text/partytown">
      // Google Analytics, Facebook Pixel, or other analytics
      // These will be loaded via Partytown for better performance
    </script>
  </body>
</html>

---
import { SITE } from '../config/site';

interface Props {
  title?: string;
  description?: string;
  image?: string;
  canonical?: string;
  noindex?: boolean;
  nofollow?: boolean;
  article?: {
    publishedTime?: string;
    modifiedTime?: string;
    author?: string;
    section?: string;
    tags?: string[];
  };
  openGraph?: {
    type?: 'website' | 'article' | 'business.business';
    locale?: string;
    site_name?: string;
  };
}

const {
  title = SITE.title,
  description = SITE.description,
  image = SITE.image,
  canonical = Astro.url.href,
  noindex = false,
  nofollow = false,
  article,
  openGraph = {}
} = Astro.props;

const fullTitle = title === SITE.title ? title : `${title} | ${SITE.title}`;
const imageUrl = new URL(image, Astro.site).href;
---

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="robots" content={`${noindex ? 'noindex' : 'index'},${nofollow ? 'nofollow' : 'follow'}`} />
<link rel="canonical" href={canonical} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content={openGraph.type || 'website'} />
<meta property="og:url" content={canonical} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:image:width" content="1200" />
<meta property="og:image:height" content="630" />
<meta property="og:site_name" content={openGraph.site_name || SITE.title} />
<meta property="og:locale" content={openGraph.locale || 'en_US'} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={canonical} />
<meta property="twitter:title" content={fullTitle} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={imageUrl} />
<meta name="twitter:creator" content={SITE.author.twitter} />

<!-- Article Meta Tags -->
{article && (
  <>
    <meta property="article:published_time" content={article.publishedTime} />
    <meta property="article:modified_time" content={article.modifiedTime} />
    <meta property="article:author" content={article.author} />
    <meta property="article:section" content={article.section} />
    {article.tags?.map((tag) => (
      <meta property="article:tag" content={tag} />
    ))}
  </>
)}

<!-- Business Schema.org JSON-LD -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "GeneralContractor",
  "name": SITE.business.name,
  "description": SITE.business.description,
  "url": SITE.url,
  "logo": new URL(SITE.business.logo, Astro.site).href,
  "image": new URL(SITE.business.image, Astro.site).href,
  "telephone": SITE.business.phone,
  "email": SITE.business.email,
  "address": {
    "@type": "PostalAddress",
    "streetAddress": SITE.business.address.street,
    "addressLocality": SITE.business.address.city,
    "addressRegion": SITE.business.address.state,
    "postalCode": SITE.business.address.zip,
    "addressCountry": SITE.business.address.country
  },
  "geo": {
    "@type": "GeoCoordinates",
    "latitude": SITE.business.coordinates.lat,
    "longitude": SITE.business.coordinates.lng
  },
  "openingHours": SITE.business.hours,
  "priceRange": SITE.business.priceRange,
  "serviceArea": {
    "@type": "GeoCircle",
    "geoMidpoint": {
      "@type": "GeoCoordinates",
      "latitude": SITE.business.coordinates.lat,
      "longitude": SITE.business.coordinates.lng
    },
    "geoRadius": SITE.business.serviceRadius
  },
  "areaServed": SITE.business.serviceAreas,
  "hasOfferCatalog": {
    "@type": "OfferCatalog",
    "name": "Construction Services",
    "itemListElement": SITE.business.services.map((service, index) => ({
      "@type": "Offer",
      "itemOffered": {
        "@type": "Service",
        "name": service.name,
        "description": service.description
      },
      "position": index + 1
    }))
  },
  "aggregateRating": {
    "@type": "AggregateRating",
    "ratingValue": SITE.business.rating.value,
    "reviewCount": SITE.business.rating.count,
    "bestRating": "5",
    "worstRating": "1"
  },
  "review": SITE.business.reviews?.map(review => ({
    "@type": "Review",
    "author": {
      "@type": "Person",
      "name": review.author
    },
    "reviewRating": {
      "@type": "Rating",
      "ratingValue": review.rating,
      "bestRating": "5",
      "worstRating": "1"
    },
    "reviewBody": review.text,
    "datePublished": review.date
  })),
  "sameAs": [
    SITE.social.facebook,
    SITE.social.instagram,
    SITE.social.linkedin,
    SITE.social.twitter
  ].filter(Boolean)
})} />

<!-- Local Business Hours Schema -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": "OpeningHoursSpecification",
  "dayOfWeek": [
    "Monday",
    "Tuesday", 
    "Wednesday",
    "Thursday",
    "Friday"
  ],
  "opens": "08:00",
  "closes": "18:00"
})} />
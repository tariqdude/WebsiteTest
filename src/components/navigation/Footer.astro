---
interface Link {
  name: string;
  href: string;
}

interface FooterSection {
  title: string;
  links: Link[];
}

interface SocialLink {
  name: string;
  href: string;
  icon: string;
}

export interface Props {
  companyName?: string;
  description?: string;
  sections?: FooterSection[];
  socialLinks?: SocialLink[];
  showNewsletter?: boolean;
  className?: string;
}

const {
  companyName = "Enterprise Solutions",
  description = "Empowering businesses worldwide with innovative technology solutions that drive growth, efficiency, and success in the digital age.",
  sections = [
    {
      title: "Solutions",
      links: [
        { name: "Enterprise Software", href: "/solutions/enterprise" },
        { name: "Cloud Services", href: "/solutions/cloud" },
        { name: "Analytics Platform", href: "/solutions/analytics" },
        { name: "Security Suite", href: "/solutions/security" },
        { name: "API Integration", href: "/solutions/integration" }
      ]
    },
    {
      title: "Resources",
      links: [
        { name: "Documentation", href: "/docs" },
        { name: "API Reference", href: "/api" },
        { name: "Case Studies", href: "/case-studies" },
        { name: "White Papers", href: "/resources/whitepapers" },
        { name: "Webinars", href: "/resources/webinars" }
      ]
    },
    {
      title: "Support",
      links: [
        { name: "Help Center", href: "/support" },
        { name: "Contact Us", href: "/contact" },
        { name: "System Status", href: "/status" },
        { name: "Community", href: "/community" },
        { name: "Training", href: "/training" }
      ]
    },
    {
      title: "Company",
      links: [
        { name: "About Us", href: "/about" },
        { name: "Careers", href: "/careers" },
        { name: "Partners", href: "/partners" },
        { name: "Press", href: "/press" },
        { name: "Investors", href: "/investors" }
      ]
    }
  ],
  socialLinks = [
    {
      name: "Twitter",
      href: "https://twitter.com/yourcompany",
      icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
      </svg>`
    },
    {
      name: "LinkedIn",
      href: "https://linkedin.com/company/yourcompany",
      icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
      </svg>`
    },
    {
      name: "GitHub",
      href: "https://github.com/yourcompany",
      icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
      </svg>`
    },
    {
      name: "YouTube",
      href: "https://youtube.com/yourcompany",
      icon: `<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
        <path d="M23.498 6.186a3.016 3.016 0 0 0-2.122-2.136C19.505 3.545 12 3.545 12 3.545s-7.505 0-9.377.505A3.017 3.017 0 0 0 .502 6.186C0 8.07 0 12 0 12s0 3.93.502 5.814a3.016 3.016 0 0 0 2.122 2.136c1.871.505 9.376.505 9.376.505s7.505 0 9.377-.505a3.015 3.015 0 0 0 2.122-2.136C24 15.93 24 12 24 12s0-3.93-.502-5.814zM9.545 15.568V8.432L15.818 12l-6.273 3.568z"/>
      </svg>`
    }
  ],
  showNewsletter = true,
  className = ""
} = Astro.props;
---

<footer class={`bg-gray-900 text-white ${className}`}>
  <!-- Main Footer Content -->
  <div class="container py-16">
    <!-- Newsletter Section -->
    {showNewsletter && (
      <div 
        class="bg-gradient-to-r from-primary-600 to-accent-600 rounded-2xl p-8 mb-16"
        data-aos="fade-up"
      >
        <div class="grid md:grid-cols-2 gap-8 items-center">
          <div>
            <h3 class="text-2xl font-bold text-white mb-2">Stay Updated</h3>
            <p class="text-white/90">Get the latest news, updates, and insights delivered to your inbox.</p>
          </div>
          <div class="flex flex-col sm:flex-row gap-4">
            <input
              type="email"
              placeholder="Enter your email"
              class="flex-1 px-4 py-3 rounded-lg bg-white/10 backdrop-blur-sm border border-white/20 text-white placeholder-white/70 focus:outline-none focus:ring-2 focus:ring-white/50"
              required
            />
            <button
              type="submit"
              class="px-6 py-3 bg-white text-primary-600 font-semibold rounded-lg hover:bg-gray-100 transition-colors duration-200"
            >
              Subscribe
            </button>
          </div>
        </div>
      </div>
    )}

    <!-- Footer Links -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-6 gap-8 mb-12">
      <!-- Company Info -->
      <div class="lg:col-span-2">
        <div class="flex items-center space-x-2 mb-4">
          <div class="w-8 h-8 bg-gradient-to-br from-primary-500 to-accent-500 rounded-lg flex items-center justify-center">
            <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
              <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
            </svg>
          </div>
          <span class="font-display font-bold text-xl">{companyName}</span>
        </div>
        <p class="text-gray-400 mb-6 leading-relaxed">{description}</p>
        
        <!-- Social Links -->
        <div class="flex space-x-4">
          {socialLinks.map((social) => (
            <a
              href={social.href}
              target="_blank"
              rel="noopener noreferrer"
              class="w-10 h-10 bg-gray-800 hover:bg-primary-600 rounded-lg flex items-center justify-center transition-colors duration-200 group"
              aria-label={social.name}
            >
              <Fragment set:html={social.icon} />
            </a>
          ))}
        </div>
      </div>

      <!-- Footer Sections -->
      {sections.map((section) => (
        <div class="space-y-4">
          <h4 class="font-semibold text-lg text-white">{section.title}</h4>
          <ul class="space-y-3">
            {section.links.map((link) => (
              <li>
                <a
                  href={link.href}
                  class="text-gray-400 hover:text-white transition-colors duration-200 text-sm"
                >
                  {link.name}
                </a>
              </li>
            ))}
          </ul>
        </div>
      ))}
    </div>

    <!-- Trust Badges -->
    <div 
      class="grid grid-cols-2 md:grid-cols-4 gap-8 py-8 border-t border-gray-800 mb-8"
      data-aos="fade-up"
      data-aos-delay="200"
    >
      <div class="flex items-center justify-center">
        <div class="text-center">
          <div class="text-2xl font-bold text-primary-400 mb-1">SOC 2</div>
          <div class="text-xs text-gray-500">Type II Certified</div>
        </div>
      </div>
      <div class="flex items-center justify-center">
        <div class="text-center">
          <div class="text-2xl font-bold text-primary-400 mb-1">ISO</div>
          <div class="text-xs text-gray-500">27001 Certified</div>
        </div>
      </div>
      <div class="flex items-center justify-center">
        <div class="text-center">
          <div class="text-2xl font-bold text-primary-400 mb-1">GDPR</div>
          <div class="text-xs text-gray-500">Compliant</div>
        </div>
      </div>
      <div class="flex items-center justify-center">
        <div class="text-center">
          <div class="text-2xl font-bold text-primary-400 mb-1">99.9%</div>
          <div class="text-xs text-gray-500">Uptime SLA</div>
        </div>
      </div>
    </div>

    <!-- Bottom Footer -->
    <div class="pt-8 border-t border-gray-800">
      <div class="flex flex-col md:flex-row justify-between items-center space-y-4 md:space-y-0">
        <div class="flex flex-col md:flex-row items-center space-y-2 md:space-y-0 md:space-x-6">
          <p class="text-gray-400 text-sm">
            Â© 2024 {companyName}. All rights reserved.
          </p>
          <div class="flex space-x-6">
            <a href="/privacy" class="text-gray-400 hover:text-white text-sm transition-colors duration-200">
              Privacy Policy
            </a>
            <a href="/terms" class="text-gray-400 hover:text-white text-sm transition-colors duration-200">
              Terms of Service
            </a>
            <a href="/cookies" class="text-gray-400 hover:text-white text-sm transition-colors duration-200">
              Cookie Policy
            </a>
          </div>
        </div>
        
        <!-- Language/Region Selector -->
        <div class="flex items-center space-x-4">
          <select class="bg-gray-800 text-gray-300 border border-gray-700 rounded-lg px-3 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-primary-500">
            <option value="en">English</option>
            <option value="es">EspaÃ±ol</option>
            <option value="fr">FranÃ§ais</option>
            <option value="de">Deutsch</option>
          </select>
          
          <!-- Back to top button -->
          <button
            id="back-to-top"
            class="w-10 h-10 bg-gray-800 hover:bg-primary-600 rounded-lg flex items-center justify-center transition-colors duration-200 opacity-0 invisible"
            aria-label="Back to top"
          >
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"/>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Performance Metrics (for development) -->
  <div class="bg-gray-950 py-4 text-center text-xs text-gray-600 hidden" id="perf-metrics">
    <div class="container">
      <span id="load-time"></span> | 
      <span id="dom-nodes"></span> | 
      <span id="memory-usage"></span>
    </div>
  </div>
</footer>

<script>
  // Newsletter form handling
  const newsletterForm = document.querySelector('form');
  if (newsletterForm) {
    newsletterForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      const formData = new FormData(newsletterForm);
      const email = formData.get('email');
      
      try {
        // Here you would integrate with your newsletter service
        console.log('Subscribing email:', email);
        
        // Show success message
        const button = newsletterForm.querySelector('button');
        if (button) {
          const originalText = button.textContent;
          button.textContent = 'Subscribed!';
          button.classList.add('bg-green-500');
          
          setTimeout(() => {
            if (button) {
              button.textContent = originalText;
              button.classList.remove('bg-green-500');
            }
          }, 3000);
        }
        
      } catch (error) {
        console.error('Newsletter subscription error:', error);
      }
    });
  }

  // Back to top functionality
  const backToTopBtn = document.getElementById('back-to-top');
  
  const toggleBackToTop = () => {
    if (window.pageYOffset > 300) {
      backToTopBtn?.classList.remove('opacity-0', 'invisible');
      backToTopBtn?.classList.add('opacity-100', 'visible');
    } else {
      backToTopBtn?.classList.add('opacity-0', 'invisible');
      backToTopBtn?.classList.remove('opacity-100', 'visible');
    }
  };

  window.addEventListener('scroll', toggleBackToTop);

  backToTopBtn?.addEventListener('click', () => {
    window.scrollTo({
      top: 0,
      behavior: 'smooth'
    });
  });

  // Performance metrics (development only)
  if (import.meta.env.DEV) {
    const perfMetrics = document.getElementById('perf-metrics');
    const loadTimeEl = document.getElementById('load-time');
    const domNodesEl = document.getElementById('dom-nodes');
    const memoryUsageEl = document.getElementById('memory-usage');

    if (perfMetrics && loadTimeEl && domNodesEl && memoryUsageEl) {
      perfMetrics.classList.remove('hidden');
      
      // Load time
      window.addEventListener('load', () => {
        const loadTime = performance.timing.loadEventEnd - performance.timing.navigationStart;
        loadTimeEl.textContent = `Load: ${loadTime}ms`;
      });

      // DOM nodes count
      const updateDOMNodes = () => {
        const nodeCount = document.querySelectorAll('*').length;
        domNodesEl.textContent = `DOM: ${nodeCount} nodes`;
      };

      // Memory usage (if available)
      const updateMemoryUsage = () => {
        if ('memory' in performance) {
          const memory = (performance as any).memory;
          const used = Math.round(memory.usedJSHeapSize / 1024 / 1024);
          memoryUsageEl.textContent = `Memory: ${used}MB`;
        } else {
          memoryUsageEl.textContent = 'Memory: N/A';
        }
      };

      updateDOMNodes();
      updateMemoryUsage();
      
      // Update metrics every 5 seconds
      setInterval(() => {
        updateDOMNodes();
        updateMemoryUsage();
      }, 5000);
    }
  }
</script>

---
// Advanced showcase component with modern features
---

<section class="relative py-fluid-xl overflow-hidden bg-gradient-to-br from-primary-50 via-white to-accent-50 dark:from-secondary-900 dark:via-secondary-800 dark:to-purple-900">
  <!-- Animated background mesh -->
  <div class="absolute inset-0 bg-mesh opacity-20 animate-gradient-xy"></div>
  
  <!-- Floating shapes -->
  <div class="absolute top-20 left-10 w-20 h-20 bg-primary-500/20 rounded-full animate-float"></div>
  <div class="absolute top-40 right-20 w-32 h-32 bg-accent-500/20 rounded-full animate-float" style="animation-delay: 1s;"></div>
  <div class="absolute bottom-20 left-1/4 w-16 h-16 bg-success-500/20 rounded-full animate-float" style="animation-delay: 2s;"></div>
  
  <div class="container mx-auto px-4 relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-fluid-lg">
      <h2 class="text-fluid-3xl font-display font-bold bg-gradient-to-r from-primary-600 via-accent-600 to-purple-600 clip-text animate-fade-in-up">
        Advanced Features Showcase
      </h2>
      <p class="text-fluid-lg text-secondary-600 dark:text-secondary-400 mt-6 max-w-3xl mx-auto animate-fade-in-up" style="animation-delay: 0.2s;">
        Experience cutting-edge design patterns and interactions
      </p>
    </div>

    <!-- Feature Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
      
      <!-- Glass Morphism Card -->
      <div class="glass rounded-3xl p-8 hover:scale-105 transition-all duration-500 animate-fade-in-up group" style="animation-delay: 0.3s;">
        <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-cyan-500 rounded-2xl flex items-center justify-center mb-6 group-hover:rotate-12 transition-transform duration-300">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 10V3L4 14h7v7l9-11h-7z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold mb-4 text-secondary-900 dark:text-white">Glass Morphism</h3>
        <p class="text-secondary-600 dark:text-secondary-300">Beautiful frosted glass effects with backdrop blur and transparency.</p>
        <div class="mt-6 h-1 bg-gradient-to-r from-blue-500 to-cyan-500 rounded-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500 origin-left"></div>
      </div>

      <!-- Neumorphism Card -->
      <div class="bg-gray-100 dark:bg-gray-800 rounded-3xl p-8 hover:scale-105 transition-all duration-500 animate-fade-in-up group shadow-neo" style="animation-delay: 0.4s;">
        <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-pink-500 rounded-2xl flex items-center justify-center mb-6 group-hover:animate-bounce">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold mb-4 text-secondary-900 dark:text-white">Neumorphism</h3>
        <p class="text-secondary-600 dark:text-secondary-300">Soft, extruded design with realistic shadows and depth.</p>
        <div class="mt-6 h-1 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full transform scale-x-0 group-hover:scale-x-100 transition-transform duration-500 origin-left"></div>
      </div>

      <!-- Brutalist Card -->
      <div class="bg-yellow-300 border-4 border-black rounded-none p-8 hover:translate-x-2 hover:-translate-y-2 transition-all duration-300 animate-fade-in-up group shadow-brutalist" style="animation-delay: 0.5s;">
        <div class="w-12 h-12 bg-black rounded-none flex items-center justify-center mb-6 group-hover:animate-swing">
          <svg class="w-6 h-6 text-yellow-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19.428 15.428a2 2 0 00-1.022-.547l-2.387-.477a6 6 0 00-3.86.517l-.318.158a6 6 0 01-3.86.517L6.05 15.21a2 2 0 00-1.806.547M8 4h8l-1 1v5.172a2 2 0 00.586 1.414l5 5c1.26 1.26.367 3.414-1.415 3.414H4.828c-1.782 0-2.674-2.154-1.414-3.414l5-5A2 2 0 009 10.172V5L8 4z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold mb-4 text-black">Brutalist Design</h3>
        <p class="text-black">Bold, raw, and unapologetically direct design approach.</p>
        <div class="mt-6 h-2 bg-black transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
      </div>

      <!-- Gradient Animation Card -->
      <div class="bg-gradient-to-br from-pink-500 via-red-500 to-yellow-500 rounded-3xl p-8 hover:scale-105 transition-all duration-500 animate-fade-in-up group relative overflow-hidden" style="animation-delay: 0.6s;">
        <div class="absolute inset-0 bg-gradient-to-br from-pink-600 via-red-600 to-yellow-600 animate-gradient-xy opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
        <div class="relative z-10">
          <div class="w-12 h-12 bg-white/20 rounded-2xl flex items-center justify-center mb-6 group-hover:animate-spin">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-4 text-white">Gradient Animations</h3>
          <p class="text-white/90">Dynamic gradient shifts that respond to interactions.</p>
        </div>
      </div>

      <!-- Shimmer Effect Card -->
      <div class="bg-secondary-900 rounded-3xl p-8 hover:scale-105 transition-all duration-500 animate-fade-in-up group relative overflow-hidden" style="animation-delay: 0.7s;">
        <div class="absolute inset-0 -translate-x-full group-hover:translate-x-full bg-gradient-to-r from-transparent via-white/20 to-transparent transition-transform duration-1000 animate-shimmer"></div>
        <div class="w-12 h-12 bg-gradient-to-br from-indigo-500 to-purple-600 rounded-2xl flex items-center justify-center mb-6 group-hover:animate-pulse">
          <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z"></path>
          </svg>
        </div>
        <h3 class="text-xl font-semibold mb-4 text-white">Shimmer Effects</h3>
        <p class="text-secondary-300">Subtle light reflections that add premium feel.</p>
      </div>

      <!-- Morph Animation Card -->
      <div class="bg-gradient-to-br from-emerald-400 to-cyan-400 rounded-3xl p-8 hover:scale-105 transition-all duration-500 animate-fade-in-up group relative" style="animation-delay: 0.8s;">
        <div class="absolute -top-4 -right-4 w-24 h-24 bg-white/20 animate-morph"></div>
        <div class="relative z-10">
          <div class="w-12 h-12 bg-white/30 rounded-2xl flex items-center justify-center mb-6 group-hover:animate-elastic">
            <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
          </div>
          <h3 class="text-xl font-semibold mb-4 text-white">Morph Animations</h3>
          <p class="text-white/90">Organic shape transformations and elastic effects.</p>
        </div>
      </div>

    </div>

    <!-- Interactive Demo Section -->
    <div class="mt-fluid-lg">
      <div class="glass-dark rounded-4xl p-12 text-center">
        <h3 class="text-fluid-2xl font-display font-bold text-white mb-8">Interactive Playground</h3>
        
        <!-- Animation Trigger Buttons -->
        <div class="flex flex-wrap justify-center gap-4 mb-12">
          <button class="px-6 py-3 bg-gradient-to-r from-blue-500 to-purple-600 text-white rounded-2xl hover:scale-110 hover:rotate-3 transition-all duration-300 shadow-glow-blue">
            Trigger Wave
          </button>
          <button class="px-6 py-3 bg-gradient-to-r from-pink-500 to-rose-600 text-white rounded-2xl hover:scale-110 hover:-rotate-3 transition-all duration-300 shadow-glow-pink">
            Start Shimmer
          </button>
          <button class="px-6 py-3 bg-gradient-to-r from-emerald-500 to-teal-600 text-white rounded-2xl hover:scale-110 hover:rotate-6 transition-all duration-300 shadow-glow-blue">
            Morph Shape
          </button>
        </div>

        <!-- Stats Display -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          <div class="glass rounded-2xl p-6">
            <div class="text-3xl font-bold text-white mb-2" data-counter="98">0</div>
            <div class="text-secondary-300">Performance Score</div>
          </div>
          <div class="glass rounded-2xl p-6">
            <div class="text-3xl font-bold text-white mb-2" data-counter="15">0</div>
            <div class="text-secondary-300">Animation Types</div>
          </div>
          <div class="glass rounded-2xl p-6">
            <div class="text-3xl font-bold text-white mb-2" data-counter="100">0</div>
            <div class="text-secondary-300">Satisfaction Rate</div>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  // Counter animation
  function animateCounters() {
    const counters = document.querySelectorAll('[data-counter]');
    
    counters.forEach(counter => {
      const targetAttr = counter.getAttribute('data-counter');
      if (!targetAttr) return;
      
      const target = parseInt(targetAttr);
      const duration = 2000;
      const increment = target / (duration / 16);
      let current = 0;
      
      const timer = setInterval(() => {
        current += increment;
        if (current >= target) {
          current = target;
          clearInterval(timer);
        }
        counter.textContent = Math.floor(current).toString();
      }, 16);
    });
  }

  // Intersection Observer for animations
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        animateCounters();
        observer.unobserve(entry.target);
      }
    });
  });

  const showcase = document.querySelector('section');
  if (showcase) {
    observer.observe(showcase);
  }

  // Interactive button effects
  document.addEventListener('DOMContentLoaded', () => {
    const buttons = document.querySelectorAll('button');
    
    buttons.forEach(button => {
      button.addEventListener('click', function(e) {
        // Create ripple effect
        const ripple = document.createElement('span');
        const rect = this.getBoundingClientRect();
        const size = Math.max(rect.width, rect.height);
        const x = e.clientX - rect.left - size / 2;
        const y = e.clientY - rect.top - size / 2;
        
        ripple.style.width = ripple.style.height = size + 'px';
        ripple.style.left = x + 'px';
        ripple.style.top = y + 'px';
        ripple.classList.add('absolute', 'animate-ripple', 'bg-white/30', 'rounded-full', 'pointer-events-none');
        
        this.style.position = 'relative';
        this.style.overflow = 'hidden';
        this.appendChild(ripple);
        
        setTimeout(() => {
          ripple.remove();
        }, 600);
      });
    });
  });
</script>

<style>
  /* Additional custom styles for advanced effects */
  .animate-ripple {
    animation: ripple 0.6s linear;
  }
  
  /* Custom gradient animations */
  @keyframes shimmer-sweep {
    0% { transform: translateX(-100%); }
    100% { transform: translateX(100%); }
  }
  
  .shimmer-effect::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
    animation: shimmer-sweep 2s infinite;
  }
</style>

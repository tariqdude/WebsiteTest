---
export interface Props {
  title?: string;
  subtitle?: string;
  description?: string;
  primaryCTA?: {
    text: string;
    href: string;
  };
  secondaryCTA?: {
    text: string;
    href: string;
  };
  image?: string;
  video?: string;
  features?: string[];
  className?: string;
}

const {
  title = "Transform Your Business with Enterprise Solutions",
  subtitle = "Leading Innovation",
  description = "Empower your organization with cutting-edge technology solutions designed for Fortune 500 companies. Scale faster, innovate smarter, and stay ahead of the competition.",
  primaryCTA = { text: "Get Started Free", href: "/contact" },
  secondaryCTA = { text: "Watch Demo", href: "/demo" },
  image = "https://images.unsplash.com/photo-1551434678-e076c223a692?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80",
  video,
  features = [
    "99.9% Uptime Guarantee",
    "Enterprise Security",
    "24/7 Premium Support",
    "Global CDN Network"
  ],
  className = ""
} = Astro.props;
---

<section class={`relative min-h-screen flex items-center justify-center overflow-hidden ${className}`}>
  <!-- Background Elements -->
  <div class="absolute inset-0 bg-gradient-to-br from-primary-600 via-primary-700 to-accent-600"></div>
  
  <!-- Animated Background Shapes -->
  <div class="absolute inset-0 overflow-hidden">
    <div class="absolute -top-40 -right-40 w-80 h-80 bg-white/10 rounded-full blur-3xl animate-float"></div>
    <div class="absolute top-20 -left-20 w-60 h-60 bg-accent-500/20 rounded-full blur-2xl animate-pulse-slow"></div>
    <div class="absolute bottom-20 right-20 w-40 h-40 bg-white/5 rounded-full blur-xl animate-bounce-gentle"></div>
  </div>
  
  <!-- Simple Pattern Overlay -->
  <div class="absolute inset-0 opacity-10">
    <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.15) 1px, transparent 0); background-size: 20px 20px;"></div>
  </div>
  
  <div class="container relative z-10">
    <div class="grid lg:grid-cols-2 gap-12 lg:gap-16 items-center">
      <!-- Content -->
      <div class="text-center lg:text-left">
        <!-- Subtitle Badge -->
        <div 
          class="inline-flex items-center px-4 py-2 bg-white/10 backdrop-blur-sm border border-white/20 rounded-full text-white/90 text-sm font-medium mb-6 animate-fade-in-down"
          data-aos="fade-down"
          data-aos-delay="100"
        >
          <svg class="w-4 h-4 mr-2 text-accent-300" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
          </svg>
          {subtitle}
        </div>
        
        <!-- Main Title -->
        <h1 
          class="h1 text-white mb-6 text-shadow-lg"
          data-aos="fade-up"
          data-aos-delay="200"
        >
          {title}
        </h1>
        
        <!-- Description -->
        <p 
          class="body-lg text-white/90 mb-8 max-w-2xl mx-auto lg:mx-0"
          data-aos="fade-up"
          data-aos-delay="300"
        >
          {description}
        </p>
        
        <!-- Features List -->
        <div 
          class="flex flex-wrap justify-center lg:justify-start gap-4 mb-8"
          data-aos="fade-up"
          data-aos-delay="400"
        >
          {features.map((feature, index) => (
            <div 
              class="flex items-center bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg px-3 py-2 text-white/90 text-sm"
              data-aos="fade-up"
              data-aos-delay={500 + (index * 100)}
            >
              <svg class="w-4 h-4 mr-2 text-green-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"/>
              </svg>
              {feature}
            </div>
          ))}
        </div>
        
        <!-- CTA Buttons -->
        <div 
          class="flex flex-col sm:flex-row gap-4 justify-center lg:justify-start"
          data-aos="fade-up"
          data-aos-delay="600"
        >
          <a
            href={primaryCTA.href}
            class="group relative inline-flex items-center justify-center px-8 py-4 bg-white text-primary-600 font-semibold rounded-xl shadow-xl hover:shadow-2xl transform hover:-translate-y-1 transition-all duration-300 overflow-hidden"
          >
            <span class="relative z-10 flex items-center">
              {primaryCTA.text}
              <svg class="w-5 h-5 ml-2 transform group-hover:translate-x-1 transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"/>
              </svg>
            </span>
            <div class="absolute inset-0 bg-gradient-to-r from-primary-50 to-accent-50 transform scale-x-0 group-hover:scale-x-100 transition-transform duration-300 origin-left"></div>
          </a>
          
          <a
            href={secondaryCTA.href}
            class="group inline-flex items-center justify-center px-8 py-4 bg-transparent text-white font-semibold rounded-xl border-2 border-white/30 hover:border-white hover:bg-white/10 backdrop-blur-sm transition-all duration-300"
          >
            <svg class="w-5 h-5 mr-2 transform group-hover:scale-110 transition-transform duration-200" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z" clip-rule="evenodd"/>
            </svg>
            {secondaryCTA.text}
          </a>
        </div>
        
        <!-- Social Proof -->
        <div 
          class="mt-12 pt-8 border-t border-white/20"
          data-aos="fade-up"
          data-aos-delay="700"
        >
          <p class="text-white/70 text-sm mb-4">Trusted by industry leaders</p>
          <div class="flex flex-wrap justify-center lg:justify-start items-center gap-6 opacity-70">
            <!-- Company logos would go here -->
            <div class="h-8 w-20 bg-white/20 rounded"></div>
            <div class="h-8 w-20 bg-white/20 rounded"></div>
            <div class="h-8 w-20 bg-white/20 rounded"></div>
            <div class="h-8 w-20 bg-white/20 rounded"></div>
          </div>
        </div>
      </div>
      
      <!-- Hero Image/Video -->
      <div 
        class="relative"
        data-aos="fade-left"
        data-aos-delay="400"
      >
        <div class="relative group">
          <!-- Decorative Elements -->
          <div class="absolute -inset-4 bg-gradient-to-r from-accent-500 to-primary-500 rounded-2xl blur-2xl opacity-20 group-hover:opacity-30 transition-opacity duration-500"></div>
          
          <div class="relative bg-white/10 backdrop-blur-sm border border-white/20 rounded-2xl p-1 shadow-2xl">
            {video ? (
              <div class="relative rounded-xl overflow-hidden">
                <video
                  autoplay
                  muted
                  loop
                  playsinline
                  class="w-full h-auto rounded-xl"
                  poster={image}
                >
                  <source src={video} type="video/mp4" />
                  Your browser does not support the video tag.
                </video>
                <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-xl"></div>
              </div>
            ) : (
              <div class="relative rounded-xl overflow-hidden">
                <img
                  src={image}
                  alt="Hero illustration"
                  class="w-full h-auto rounded-xl transform group-hover:scale-105 transition-transform duration-700"
                  loading="eager"
                />
                <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent rounded-xl"></div>
              </div>
            )}
          </div>
          
          <!-- Floating Elements -->
          <div class="absolute -top-6 -right-6 w-12 h-12 bg-accent-400 rounded-full flex items-center justify-center text-white shadow-xl animate-bounce-gentle">
            <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z" clip-rule="evenodd"/>
            </svg>
          </div>
          
          <div class="absolute -bottom-4 -left-4 w-16 h-16 bg-white/20 backdrop-blur-sm border border-white/30 rounded-xl flex items-center justify-center text-white shadow-xl animate-float">
            <svg class="w-8 h-8" fill="currentColor" viewBox="0 0 20 20">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
          </div>
        </div>
        
        <!-- Stats Cards -->
        <div class="absolute -bottom-8 left-4 right-4 flex justify-between gap-4">
          <div 
            class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg p-4 flex-1 text-center"
            data-aos="fade-up"
            data-aos-delay="800"
          >
            <div class="text-2xl font-bold text-white">99.9%</div>
            <div class="text-white/70 text-sm">Uptime</div>
          </div>
          <div 
            class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg p-4 flex-1 text-center"
            data-aos="fade-up"
            data-aos-delay="900"
          >
            <div class="text-2xl font-bold text-white">500+</div>
            <div class="text-white/70 text-sm">Clients</div>
          </div>
          <div 
            class="bg-white/10 backdrop-blur-sm border border-white/20 rounded-lg p-4 flex-1 text-center"
            data-aos="fade-up"
            data-aos-delay="1000"
          >
            <div class="text-2xl font-bold text-white">24/7</div>
            <div class="text-white/70 text-sm">Support</div>
          </div>
        </div>
      </div>
    </div>
  </div>
  
  <!-- Scroll Indicator -->
  <div 
    class="absolute bottom-8 left-1/2 transform -translate-x-1/2 text-white/70 animate-bounce"
    data-aos="fade-up"
    data-aos-delay="1200"
  >
    <svg class="w-6 h-6 mx-auto mb-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 14l-7 7m0 0l-7-7m7 7V3"/>
    </svg>
    <span class="text-xs">Scroll to explore</span>
  </div>
</section>

<script>
  // Parallax effect for hero section
  const heroSection = document.querySelector('.hero-section');
  const backgroundShapes = document.querySelectorAll('.absolute');
  
  if (heroSection) {
    window.addEventListener('scroll', () => {
      const scrolled = window.pageYOffset;
      const parallax = scrolled * 0.5;
      
      backgroundShapes.forEach((shape, index) => {
        const speed = (index + 1) * 0.1;
        const yPos = -(scrolled * speed);
        shape.style.transform = `translateY(${yPos}px)`;
      });
    });
  }
  
  // Intersection Observer for counting animations
  const statsObserver = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const target = entry.target;
        const finalNumber = parseInt(target.textContent);
        let currentNumber = 0;
        const increment = finalNumber / 50;
        
        const countUp = setInterval(() => {
          currentNumber += increment;
          if (currentNumber >= finalNumber) {
            target.textContent = finalNumber.toString() + (target.textContent.includes('%') ? '%' : '+');
            clearInterval(countUp);
          } else {
            target.textContent = Math.floor(currentNumber).toString() + (target.textContent.includes('%') ? '%' : '+');
          }
        }, 50);
        
        statsObserver.unobserve(target);
      }
    });
  });
  
  // Observe stat numbers
  document.querySelectorAll('.text-2xl.font-bold').forEach((stat) => {
    statsObserver.observe(stat);
  });
</script>

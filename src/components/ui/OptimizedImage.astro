---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'img'> {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  loading?: 'eager' | 'lazy';
  quality?: number;
  format?: 'webp' | 'avif' | 'jpeg' | 'png';
  sizes?: string;
  class?: string;
}

const {
  src,
  alt,
  width,
  height,
  loading = 'lazy',
  quality = 80,
  format = 'webp',
  sizes,
  class: className,
  ...rest
} = Astro.props;

// Generate responsive image sources
const generateSrcSet = (baseSrc: string, baseWidth?: number) => {
  if (!baseWidth) return '';
  
  const widths = [320, 640, 768, 1024, 1280, 1536];
  return widths
    .filter(w => w <= baseWidth)
    .map(w => `${baseSrc}?w=${w}&q=${quality}&f=${format} ${w}w`)
    .join(', ');
};

const srcSet = width ? generateSrcSet(src, width) : '';
const optimizedSrc = `${src}?w=${width || 800}&q=${quality}&f=${format}`;
---

<picture class={className}>
  <!-- WebP format for modern browsers -->
  {format === 'webp' && (
    <source
      srcset={srcSet || `${src}?f=webp&q=${quality}`}
      sizes={sizes || '(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw'}
      type="image/webp"
    />
  )}
  
  <!-- AVIF format for even better compression -->
  {format === 'avif' && (
    <source
      srcset={srcSet || `${src}?f=avif&q=${quality}`}
      sizes={sizes || '(max-width: 768px) 100vw, (max-width: 1024px) 50vw, 33vw'}
      type="image/avif"
    />
  )}
  
  <!-- Fallback image -->
  <img
    src={optimizedSrc}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    decoding="async"
    {...rest}
  />
</picture>

<style>
  picture {
    display: block;
  }
  
  img {
    width: 100%;
    height: auto;
    transition: opacity 0.3s ease;
  }
  
  /* Lazy loading placeholder */
  img[loading="lazy"] {
    background: linear-gradient(90deg, #f0f0f0 25%, transparent 37%, transparent 63%, #f0f0f0 75%);
    background-size: 400% 100%;
    animation: shimmer 1.5s ease-in-out infinite;
  }
  
  @keyframes shimmer {
    0% { background-position: 100% 50%; }
    100% { background-position: -100% 50%; }
  }
</style>

---
// Simple form validation component without complex TypeScript classes
export interface Props {
  class?: string;
}

const { class: additionalClasses = '' } = Astro.props;
---

<div class={`contact-form ${additionalClasses}`}>
  <form id="contact-form" class="space-y-6" action="#" method="POST">
    <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
      <div>
        <label for="first-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">First Name *</label>
        <input type="text" id="first-name" name="first-name" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-900 dark:text-white" placeholder="Enter your first name">
      </div>
      <div>
        <label for="last-name" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Last Name *</label>
        <input type="text" id="last-name" name="last-name" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-900 dark:text-white" placeholder="Enter your last name">
      </div>
    </div>
    
    <div>
      <label for="email" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Email Address *</label>
      <input type="email" id="email" name="email" required class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-900 dark:text-white" placeholder="your@email.com">
    </div>
    
    <div>
      <label for="phone" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Phone Number</label>
      <input type="tel" id="phone" name="phone" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-900 dark:text-white" placeholder="(555) 123-4567">
    </div>
    
    <div>
      <label for="service" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Service Needed</label>
      <select id="service" name="service" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 bg-white dark:bg-gray-800 text-gray-900 dark:text-white">
        <option value="">Select a service</option>
        <option value="residential">Residential Construction</option>
        <option value="commercial">Commercial Construction</option>
        <option value="hvac">HVAC Services</option>
        <option value="renovation">Home Renovation</option>
        <option value="electrical">Electrical Services</option>
        <option value="plumbing">Plumbing Services</option>
      </select>
    </div>
    
    <div>
      <label for="message" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Project Description</label>
      <textarea id="message" name="message" rows="4" class="w-full px-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-brand-primary focus:border-transparent transition-colors duration-200 resize-none bg-white dark:bg-gray-800 text-gray-900 dark:text-white" placeholder="Tell us about your project..."></textarea>
    </div>
    
    <div class="success-message hidden bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded">
      Message sent successfully! We'll contact you within 24 hours.
    </div>
    
    <div class="error-message hidden bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded">
      Failed to send message. Please try again.
    </div>
    
    <button type="submit" class="submit-btn w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-4 rounded-lg transition-colors duration-200">
      <span class="btn-text">
        <i class="fas fa-paper-plane mr-2"></i>
        Send Message
      </span>
      <span class="btn-loading hidden">
        <i class="fas fa-spinner fa-spin mr-2"></i>
        Sending...
      </span>
    </button>
  </form>
</div>

<script is:inline>
  // Simple form validation without complex classes
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contact-form');
    const successMsg = form?.querySelector('.success-message');
    const errorMsg = form?.querySelector('.error-message');
    const submitBtn = form?.querySelector('.submit-btn');
    const btnText = form?.querySelector('.btn-text');
    const btnLoading = form?.querySelector('.btn-loading');

    if (form) {
      form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Show loading state
        if (btnText && btnLoading) {
          btnText.classList.add('hidden');
          btnLoading.classList.remove('hidden');
        }
        if (submitBtn) submitBtn.disabled = true;
        
        // Hide previous messages
        if (successMsg) successMsg.classList.add('hidden');
        if (errorMsg) errorMsg.classList.add('hidden');
        
        // Simulate form submission
        try {
          await new Promise(resolve => setTimeout(resolve, 1000));
          
          // Show success message
          if (successMsg) successMsg.classList.remove('hidden');
          form.reset();
        } catch (error) {
          // Show error message
          if (errorMsg) errorMsg.classList.remove('hidden');
        }
        
        // Reset button state
        if (btnText && btnLoading) {
          btnText.classList.remove('hidden');
          btnLoading.classList.add('hidden');
        }
        if (submitBtn) submitBtn.disabled = false;
      });
    }
  });
</script>

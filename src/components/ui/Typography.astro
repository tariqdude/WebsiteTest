---
export interface Props {
  variant: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'subtitle' | 'body' | 'caption' | 'overline';
  color?: 'primary' | 'secondary' | 'accent' | 'neutral' | 'white' | 'muted';
  weight?: 'light' | 'normal' | 'medium' | 'semibold' | 'bold' | 'extrabold';
  align?: 'left' | 'center' | 'right' | 'justify';
  animate?: 'none' | 'fade-in' | 'slide-up' | 'text-reveal' | 'counter-up';
  as?: string;
  class?: string;
}

const {
  variant,
  color = 'neutral',
  weight,
  align = 'left',
  animate = 'none',
  as,
  class: additionalClasses = '',
  ...props
} = Astro.props;

const variantStyles = {
  h1: 'text-4xl md:text-5xl lg:text-6xl font-bold leading-tight',
  h2: 'text-3xl md:text-4xl lg:text-5xl font-bold leading-tight',
  h3: 'text-2xl md:text-3xl lg:text-4xl font-semibold leading-snug',
  h4: 'text-xl md:text-2xl lg:text-3xl font-semibold leading-snug',
  h5: 'text-lg md:text-xl font-medium leading-relaxed',
  h6: 'text-base md:text-lg font-medium leading-relaxed',
  subtitle: 'text-lg md:text-xl text-brand-neutral-600 leading-relaxed',
  body: 'text-base leading-relaxed',
  caption: 'text-sm leading-relaxed',
  overline: 'text-xs uppercase tracking-wide font-medium'
};

const colorClasses = {
  primary: 'text-brand-primary-600',
  secondary: 'text-brand-secondary-600',
  accent: 'text-brand-accent-600',
  neutral: 'text-brand-neutral-900',
  white: 'text-white',
  muted: 'text-brand-neutral-600'
};

const weightClasses = {
  light: 'font-light',
  normal: 'font-normal',
  medium: 'font-medium',
  semibold: 'font-semibold',
  bold: 'font-bold',
  extrabold: 'font-extrabold'
};

const alignClasses = {
  left: 'text-left',
  center: 'text-center',
  right: 'text-right',
  justify: 'text-justify'
};

const animationClasses = {
  none: '',
  'fade-in': 'animate-fade-in',
  'slide-up': 'animate-slide-up',
  'text-reveal': 'animate-text-reveal',
  'counter-up': 'animate-counter-up'
};

// Default tags for each variant
const defaultTags = {
  h1: 'h1',
  h2: 'h2',
  h3: 'h3',
  h4: 'h4',
  h5: 'h5',
  h6: 'h6',
  subtitle: 'p',
  body: 'p',
  caption: 'span',
  overline: 'span'
};

const Tag = as || defaultTags[variant];

const classes = [
  variantStyles[variant],
  colorClasses[color],
  weight ? weightClasses[weight] : '',
  alignClasses[align],
  animationClasses[animate],
  additionalClasses
].filter(Boolean).join(' ');
---

<Tag class={classes} {...props}>
  <slot />
</Tag>

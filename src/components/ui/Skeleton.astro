---
export interface Props {
  variant?: 'text' | 'circle' | 'rectangle' | 'card' | 'avatar' | 'button';
  size?: 'sm' | 'md' | 'lg' | 'xl';
  width?: string;
  height?: string;
  lines?: number;
  animate?: boolean;
  class?: string;
}

const {
  variant = 'text',
  size = 'md',
  width,
  height,
  lines = 3,
  animate = true,
  class: additionalClasses = '',
  ...props
} = Astro.props;

const baseClasses = `bg-brand-neutral-200 ${animate ? 'animate-pulse' : ''}`;

const variantClasses = {
  text: 'h-4 rounded',
  circle: 'rounded-full',
  rectangle: 'rounded-lg',
  card: 'rounded-xl',
  avatar: 'rounded-full',
  button: 'rounded-lg h-10'
};

const sizeClasses = {
  sm: {
    text: 'h-3',
    circle: 'w-8 h-8',
    rectangle: 'w-20 h-16',
    card: 'w-48 h-32',
    avatar: 'w-8 h-8',
    button: 'w-20 h-8'
  },
  md: {
    text: 'h-4',
    circle: 'w-12 h-12',
    rectangle: 'w-32 h-24',
    card: 'w-64 h-40',
    avatar: 'w-12 h-12',
    button: 'w-24 h-10'
  },
  lg: {
    text: 'h-5',
    circle: 'w-16 h-16',
    rectangle: 'w-48 h-32',
    card: 'w-80 h-48',
    avatar: 'w-16 h-16',
    button: 'w-32 h-12'
  },
  xl: {
    text: 'h-6',
    circle: 'w-24 h-24',
    rectangle: 'w-64 h-48',
    card: 'w-96 h-64',
    avatar: 'w-24 h-24',
    button: 'w-40 h-14'
  }
};

const skeletonClasses = [
  baseClasses,
  variantClasses[variant],
  sizeClasses[size][variant],
  additionalClasses
].filter(Boolean).join(' ');

const customStyle = (width || height) ? {
  width: width || undefined,
  height: height || undefined
} : {};
---

{variant === 'text' && lines > 1 ? (
  <div class="space-y-2" {...props}>
    {Array.from({ length: lines }, (_, index) => (
      <div 
        key={index}
        class={skeletonClasses}
        style={{
          width: index === lines - 1 ? '75%' : '100%',
          ...customStyle
        }}
      ></div>
    ))}
  </div>
) : variant === 'card' ? (
  <div class={`${skeletonClasses} p-4 space-y-4`} style={customStyle} {...props}>
    <!-- Card Header -->
    <div class="flex items-center space-x-3">
      <div class="w-10 h-10 bg-brand-neutral-300 rounded-full animate-pulse"></div>
      <div class="flex-1 space-y-2">
        <div class="h-4 bg-brand-neutral-300 rounded w-3/4 animate-pulse"></div>
        <div class="h-3 bg-brand-neutral-300 rounded w-1/2 animate-pulse"></div>
      </div>
    </div>
    
    <!-- Card Content -->
    <div class="space-y-2">
      <div class="h-4 bg-brand-neutral-300 rounded animate-pulse"></div>
      <div class="h-4 bg-brand-neutral-300 rounded w-5/6 animate-pulse"></div>
      <div class="h-4 bg-brand-neutral-300 rounded w-4/6 animate-pulse"></div>
    </div>
    
    <!-- Card Footer -->
    <div class="flex space-x-2">
      <div class="h-8 bg-brand-neutral-300 rounded w-20 animate-pulse"></div>
      <div class="h-8 bg-brand-neutral-300 rounded w-16 animate-pulse"></div>
    </div>
  </div>
) : (
  <div class={skeletonClasses} style={customStyle} {...props}></div>
)}

<style>
  @keyframes pulse {
    0%, 100% {
      opacity: 1;
    }
    50% {
      opacity: 0.5;
    }
  }
  
  .animate-pulse {
    animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
</style>
